{
	"info": {
		"_postman_id": "b9973609-8c95-444b-babe-551b5ff47176",
		"name": "Library",
		"schema": "https://schema.postman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "AddBook",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d29d82db-3763-4aeb-a5f1-37f59711d00d",
						"exec": [
							"const jsonData=pm.response.json();\r",
							"const req=JSON.parse(pm.request.body.raw);\r",
							"\r",
							"console.log(jsonData);\r",
							"console.log(jsonData.ID);\r",
							"const bookId=jsonData.ID;\r",
							"pm.environment.set(\"book_id\",bookId)\r",
							"\r",
							"//isbn and aisle - lets concatenate should match with response ID\r",
							"pm.test(\"ID Logic Validation\",()=>{\r",
							"\r",
							"const isbn_val=pm.collectionVariables.get(\"isbn\")\r",
							"\r",
							"const aisle_val=req.aisle;\r",
							"const expected_id=isbn_val+aisle_val;\r",
							"console.log(expected_id);\r",
							"\r",
							"pm.expect(expected_id).to.eql(bookId);\r",
							"\r",
							"});\r",
							"\r",
							"function cleanupScript(){\r",
							"    \r",
							"    const book_id=generateBookId;\r",
							"    pm.environment.set(\"book_id\",book_id);\r",
							"\r",
							"    Postman.setNextRequest(\"DeleteBook\");\r",
							"}\r",
							"\r",
							"function generateBookId(){\r",
							"\r",
							"const expected_id=req.isbn+req.aisle;\r",
							"return expected_id;\r",
							"}\r",
							"\r",
							"pm.test(\"validate statuscode is 200\",function(){\r",
							"\r",
							"    try{\r",
							"        \r",
							"  pm.response.to.have.status(200);  \r",
							"  pm.expect(jsonData).to.have.property(\"Msg\");\r",
							"  pm.expect(jsonData.Msg).to.eql(\"successfully added\");\r",
							" pm.expect(jsonData).to.have.property(\"ID\");\r",
							"    }\r",
							"    catch(err){\r",
							"      if (jsonData.Msg.includes(\"Exists\")){\r",
							"        cleanupScript();\r",
							"      }  \r",
							"    }\r",
							"});\r",
							"\r",
							"pm.test(\"Headers cookies responsetime validation\",()=>{\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json;charset=UTF-8\");\r",
							"  pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"  pm.expect(pm.response.text()).to.include(\"successfully added\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6f0cfe76-362e-4915-932b-e5f5d7591bf9",
						"exec": [
							"//console.log(pm.globals.get(\"companyCode\"));\r",
							"const code=pm.globals.get(\"companyCode\");\r",
							"const val=pm.variables.replaceIn('{{$randomInt}}')\r",
							"pm.collectionVariables.set(\"isbn\",code+val);\r",
							"pm.collectionVariables.set(\"book_name\",pm.iterationData.get(\"BookName\"));\r",
							"console.log(pm.collectionVariables.get(\"book_name\"));\r",
							"\r",
							"pm.collectionVariables.set(\"author_name\",pm.iterationData.get(\"Author\"));\r",
							"console.log(pm.collectionVariables.get(\"author_name\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "403fbc13-79b0-4b5c-b271-d0371048161a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"name\":\"{{book_name}}\",\r\n\"isbn\":\"kjllkk\",\r\n\"aisle\":\"227\",\r\n\"author\":\"{{author_name}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/Library/Addbook.php",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"Library",
						"Addbook.php"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"type": "text",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBook",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "baf8f329-75bd-489d-8993-96bd05e86d66",
						"exec": [
							"const getBookResponse=pm.response.json();\r",
							"const schema={\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"book_name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"isbn\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"aisle\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"author\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"book_name\",\r",
							"        \"isbn\",\r",
							"        \"aisle\",\r",
							"        \"author\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"Validate the Json Response logic\",()=>{\r",
							"console.log(getBookResponse);\r",
							"pm.expect(getBookResponse[0].author).to.eql(pm.collectionVariables.get(\"author_name\"))\r",
							"}); \r",
							"\r",
							"pm.test(\"Validate the Json Response Schema\",()=>{\r",
							"\r",
							"pm.response.to.have.status(200);\r",
							"pm.response.to.have.jsonSchema(schema);\r",
							"\r",
							"}); "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "ec1ac3b9-f68f-41bc-b451-7ef6b9ec2204",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/Library/GetBook.php?ID={{book_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"Library",
						"GetBook.php"
					],
					"query": [
						{
							"key": "ID",
							"value": "{{book_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteBook",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c03892c-e54b-4d34-bb94-0a96a2d6ec0f",
						"exec": [
							"const jsonData=pm.response.json();\r",
							"const schema={\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"msg\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"msg\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"Validate the Json Response Code\",()=>{\r",
							"\r",
							"pm.response.to.have.status(200);\r",
							"pm.response.to.have.jsonSchema(schema);\r",
							"pm.expect(jsonData.msg).to.eql(\"book is successfully deleted\");\r",
							"\r",
							"}); "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "c620b03e-96cf-4f9b-b3a1-2a7f11f7b2b0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \r\n\"ID\" : \"{{book_id}}\"\r\n \r\n} \r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{base_url}}/Library/DeleteBook.php"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f944b29e-434d-45bd-ab8b-e851305acd2c",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "fd4e83b4-b921-4a5e-878c-e2b0397ab80f",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "isbn",
			"value": "",
			"type": "string"
		},
		{
			"key": "author_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "book_name",
			"value": "",
			"type": "string"
		}
	]
}